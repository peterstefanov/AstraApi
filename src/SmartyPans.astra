agent SmartyPans extends Player {
	
	module Console console;
	module System system;
	
	types smartyPans_types{
		formula state(string);
		formula taskPathReady(string);
	}
	
	//listen for a message from MapGenerator if path is ready
	rule @message(request, string From, taskPathReady(string Ready)){
		if(Ready == "Ready") {
			send(agree, From, state("Agree"));
			try {
				!satrtMovingNow("Ready");
			} recover {
				send(failure, From, state("Failure"));
			}
			
		} else {
			send(refuse, From, state("Refuse"));
		}
	}
	
	rule +!satrtMovingNow(string Text) {	
	    !messaging("messaging", "{'message': 'Ready'}");    
	}
	
	rule +!messaging(string messaging, string event) {
	    messaging = messagingModule.sendMessage(event);
	    !sendCommand("messaging", messaging);
	}	
	
	rule +!positionVector(string positionVector, string event) {
 
	    int size = gridMap.getMapSize();  
        console.println("Knowledge map size: " + size);
        
	    positionVector = gridMap.getNextMove(event);
	    !sendCommand("position_vector", positionVector);
	}
		
	rule +!sendCommand(string EventType, string Command) {
		unityModule.sendCommand(system.name(), EventType, [Command]);
	}
}
